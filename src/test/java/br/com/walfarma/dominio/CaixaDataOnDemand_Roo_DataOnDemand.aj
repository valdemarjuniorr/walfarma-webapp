// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.walfarma.dominio;

import br.com.walfarma.dominio.Caixa;
import br.com.walfarma.dominio.FuncionarioDataOnDemand;
import java.util.List;
import java.util.Random;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect CaixaDataOnDemand_Roo_DataOnDemand {
    
    declare @type: CaixaDataOnDemand: @Component;
    
    private Random CaixaDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Caixa> CaixaDataOnDemand.data;
    
    @Autowired
    private FuncionarioDataOnDemand CaixaDataOnDemand.funcionarioDataOnDemand;
    
    public Caixa CaixaDataOnDemand.getNewTransientCaixa(int index) {
        br.com.walfarma.dominio.Caixa obj = new br.com.walfarma.dominio.Caixa();
        obj.setId(new Integer(index).longValue());
        obj.setAbertura(new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime());
        obj.setFechamento(new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime());
        obj.setValorAbertura(java.math.BigDecimal.valueOf(index));
        obj.setSuprimento(java.math.BigDecimal.valueOf(index));
        obj.setSangria(java.math.BigDecimal.valueOf(index));
        obj.setTotalVendas(java.math.BigDecimal.valueOf(index));
        obj.setTotalRecebimento(java.math.BigDecimal.valueOf(index));
        obj.setDescontoVendas(java.math.BigDecimal.valueOf(index));
        obj.setDescontoRecebimento(java.math.BigDecimal.valueOf(index));
        obj.setOperadorAbertura(funcionarioDataOnDemand.getRandomFuncionario());
        obj.setOperadorFechamento(funcionarioDataOnDemand.getRandomFuncionario());
        obj.setVendasDinheiro(java.math.BigDecimal.valueOf(index));
        obj.setVendasCheques(java.math.BigDecimal.valueOf(index));
        obj.setVendasChequesPre(java.math.BigDecimal.valueOf(index));
        obj.setVendasCartao(java.math.BigDecimal.valueOf(index));
        obj.setVendasCrediario(java.math.BigDecimal.valueOf(index));
        obj.setVendasParcelamento(java.math.BigDecimal.valueOf(index));
        obj.setRecebimentoDinheiro(java.math.BigDecimal.valueOf(index));
        obj.setRecebimentoCheque(java.math.BigDecimal.valueOf(index));
        obj.setRecebimentoChequePre(java.math.BigDecimal.valueOf(index));
        obj.setOutros(java.math.BigDecimal.valueOf(index));
        obj.setRecebimentoCartao(java.math.BigDecimal.valueOf(index));
        obj.setOutrasLojas(java.math.BigDecimal.valueOf(index));
        obj.setVendasSubsidio(java.math.BigDecimal.valueOf(index));
        obj.setDevolucoes(java.math.BigDecimal.valueOf(index));
        obj.setDevolucoesAVista(java.math.BigDecimal.valueOf(index));
        return obj;
    }
    
    public Caixa CaixaDataOnDemand.getSpecificCaixa(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Caixa obj = data.get(index);
        return Caixa.findCaixa(obj.get_id());
    }
    
    public Caixa CaixaDataOnDemand.getRandomCaixa() {
        init();
        Caixa obj = data.get(rnd.nextInt(data.size()));
        return Caixa.findCaixa(obj.get_id());
    }
    
    public boolean CaixaDataOnDemand.modifyCaixa(Caixa obj) {
        return false;
    }
    
    public void CaixaDataOnDemand.init() {
        data = br.com.walfarma.dominio.Caixa.findCaixaEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Caixa' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<br.com.walfarma.dominio.Caixa>();
        for (int i = 0; i < 10; i++) {
            br.com.walfarma.dominio.Caixa obj = getNewTransientCaixa(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
