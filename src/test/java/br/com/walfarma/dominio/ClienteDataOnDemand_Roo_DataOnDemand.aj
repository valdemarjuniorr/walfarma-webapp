// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.walfarma.dominio;

import br.com.walfarma.dominio.Cliente;
import br.com.walfarma.dominio.ContatoDataOnDemand;
import br.com.walfarma.dominio.ConvenioDataOnDemand;
import br.com.walfarma.dominio.EnderecoDataOnDemand;
import java.util.List;
import java.util.Random;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect ClienteDataOnDemand_Roo_DataOnDemand {
    
    declare @type: ClienteDataOnDemand: @Component;
    
    private Random ClienteDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Cliente> ClienteDataOnDemand.data;
    
    @Autowired
    private ConvenioDataOnDemand ClienteDataOnDemand.convenioDataOnDemand;
    
    @Autowired
    private EnderecoDataOnDemand ClienteDataOnDemand.enderecoDataOnDemand;
    
    @Autowired
    private ContatoDataOnDemand ClienteDataOnDemand.contatoDataOnDemand;
    
    public Cliente ClienteDataOnDemand.getNewTransientCliente(int index) {
        br.com.walfarma.dominio.Cliente obj = new br.com.walfarma.dominio.Cliente();
        obj.setConvenio(convenioDataOnDemand.getRandomConvenio());
        java.lang.String nome = "nome_" + index;
        if (nome.length() > 256) {
            nome  = nome.substring(0, 256);
        }
        obj.setNome(nome);
        java.lang.String cpf = "cpf_" + index;
        if (cpf.length() > 14) {
            cpf  = cpf.substring(0, 14);
        }
        obj.setCpf(cpf);
        java.lang.String rg = "rg_" + index;
        if (rg.length() > 16) {
            rg  = rg.substring(0, 16);
        }
        obj.setRg(rg);
        obj.setEndereco(enderecoDataOnDemand.getRandomEndereco());
        obj.setContato(contatoDataOnDemand.getRandomContato());
        obj.setEstadoCivil(br.com.walfarma.dominio.EstadoCivil.class.getEnumConstants()[0]);
        obj.setSexo(br.com.walfarma.dominio.SEXO.class.getEnumConstants()[0]);
        java.lang.String conjuge = "conjuge_" + index;
        if (conjuge.length() > 256) {
            conjuge  = conjuge.substring(0, 256);
        }
        obj.setConjuge(conjuge);
        java.lang.String nomePai = "nomePai_" + index;
        if (nomePai.length() > 256) {
            nomePai  = nomePai.substring(0, 256);
        }
        obj.setNomePai(nomePai);
        java.lang.String nomeMae = "nomeMae_" + index;
        if (nomeMae.length() > 256) {
            nomeMae  = nomeMae.substring(0, 256);
        }
        obj.setNomeMae(nomeMae);
        obj.setStatus(br.com.walfarma.dominio.Status.class.getEnumConstants()[0]);
        obj.setClienteEspecial(Boolean.TRUE);
        java.lang.String clienteEmpresa = "clienteEmpresa_" + index;
        if (clienteEmpresa.length() > 50) {
            clienteEmpresa  = clienteEmpresa.substring(0, 50);
        }
        obj.setClienteEmpresa(clienteEmpresa);
        java.lang.String observacao = "observacao_" + index;
        if (observacao.length() > 256) {
            observacao  = observacao.substring(0, 256);
        }
        obj.setObservacao(observacao);
        obj.setDataCadastro(new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime());
        obj.setDataNascimento(java.util.Calendar.getInstance());
        java.lang.String pathFoto = "pathFoto_" + index;
        if (pathFoto.length() > 256) {
            pathFoto  = pathFoto.substring(0, 256);
        }
        obj.setPathFoto(pathFoto);
        java.lang.String login = "login_" + index;
        if (login.length() > 20) {
            login  = login.substring(0, 20);
        }
        obj.setLogin(login);
        obj.setSenha("senha_" + index);
        return obj;
    }
    
    public Cliente ClienteDataOnDemand.getSpecificCliente(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Cliente obj = data.get(index);
        return Cliente.findCliente(obj.getId());
    }
    
    public Cliente ClienteDataOnDemand.getRandomCliente() {
        init();
        Cliente obj = data.get(rnd.nextInt(data.size()));
        return Cliente.findCliente(obj.getId());
    }
    
    public boolean ClienteDataOnDemand.modifyCliente(Cliente obj) {
        return false;
    }
    
    public void ClienteDataOnDemand.init() {
        data = br.com.walfarma.dominio.Cliente.findClienteEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Cliente' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<br.com.walfarma.dominio.Cliente>();
        for (int i = 0; i < 10; i++) {
            br.com.walfarma.dominio.Cliente obj = getNewTransientCliente(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
