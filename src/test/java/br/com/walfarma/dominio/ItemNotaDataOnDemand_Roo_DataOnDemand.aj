// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.walfarma.dominio;

import br.com.walfarma.dominio.CabecalhoNotaDataOnDemand;
import br.com.walfarma.dominio.ItemNota;
import br.com.walfarma.dominio.ProdutoDataOnDemand;
import java.util.List;
import java.util.Random;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect ItemNotaDataOnDemand_Roo_DataOnDemand {
    
    declare @type: ItemNotaDataOnDemand: @Component;
    
    private Random ItemNotaDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<ItemNota> ItemNotaDataOnDemand.data;
    
    @Autowired
    private CabecalhoNotaDataOnDemand ItemNotaDataOnDemand.cabecalhoNotaDataOnDemand;
    
    @Autowired
    private ProdutoDataOnDemand ItemNotaDataOnDemand.produtoDataOnDemand;
    
    public ItemNota ItemNotaDataOnDemand.getNewTransientItemNota(int index) {
        br.com.walfarma.dominio.ItemNota obj = new br.com.walfarma.dominio.ItemNota();
        obj.setId(new Integer(index).longValue());
        obj.setCabecalhoNota(cabecalhoNotaDataOnDemand.getRandomCabecalhoNota());
        obj.setProduto(produtoDataOnDemand.getRandomProduto());
        obj.setCFOP("CFOP_" + index);
        java.lang.String CST = "C_" + index;
        if (CST.length() > 3) {
            CST  = CST.substring(0, 3);
        }
        obj.setCST(CST);
        obj.setQuantidade(new Integer(index));
        obj.setPrecoCompra(java.math.BigDecimal.valueOf(index));
        obj.setDesconto(java.math.BigDecimal.valueOf(index));
        obj.setICMS(java.math.BigDecimal.valueOf(index));
        obj.setIPI(java.math.BigDecimal.valueOf(index));
        obj.setValorICMS(java.math.BigDecimal.valueOf(index));
        obj.setValorIPI(java.math.BigDecimal.valueOf(index));
        obj.setSaldoAnterior(java.math.BigDecimal.valueOf(index));
        obj.setBaseICMS(java.math.BigDecimal.valueOf(index));
        obj.setBaseICMS_ST(java.math.BigDecimal.valueOf(index));
        obj.setIsentoICMS(java.math.BigDecimal.valueOf(index));
        obj.setNotasEmbalagem(new Integer(index));
        obj.setRateio(java.math.BigDecimal.valueOf(index));
        obj.setPMC(java.math.BigDecimal.valueOf(index));
        obj.setReducaoICMS(java.math.BigDecimal.valueOf(index));
        obj.setPIS(java.math.BigDecimal.valueOf(index));
        obj.setCONFINS(java.math.BigDecimal.valueOf(index));
        return obj;
    }
    
    public ItemNota ItemNotaDataOnDemand.getSpecificItemNota(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        ItemNota obj = data.get(index);
        return ItemNota.findItemNota(obj.get_id());
    }
    
    public ItemNota ItemNotaDataOnDemand.getRandomItemNota() {
        init();
        ItemNota obj = data.get(rnd.nextInt(data.size()));
        return ItemNota.findItemNota(obj.get_id());
    }
    
    public boolean ItemNotaDataOnDemand.modifyItemNota(ItemNota obj) {
        return false;
    }
    
    public void ItemNotaDataOnDemand.init() {
        data = br.com.walfarma.dominio.ItemNota.findItemNotaEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'ItemNota' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<br.com.walfarma.dominio.ItemNota>();
        for (int i = 0; i < 10; i++) {
            br.com.walfarma.dominio.ItemNota obj = getNewTransientItemNota(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
