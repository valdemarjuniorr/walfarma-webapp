// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.walfarma.dominio;

import br.com.walfarma.dominio.CategoriaDataOnDemand;
import br.com.walfarma.dominio.FornecedorDataOnDemand;
import br.com.walfarma.dominio.Produto;
import java.util.List;
import java.util.Random;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect ProdutoDataOnDemand_Roo_DataOnDemand {
    
    declare @type: ProdutoDataOnDemand: @Component;
    
    private Random ProdutoDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Produto> ProdutoDataOnDemand.data;
    
    @Autowired
    private FornecedorDataOnDemand ProdutoDataOnDemand.fornecedorDataOnDemand;
    
    @Autowired
    private CategoriaDataOnDemand ProdutoDataOnDemand.categoriaDataOnDemand;
    
    public Produto ProdutoDataOnDemand.getNewTransientProduto(int index) {
        br.com.walfarma.dominio.Produto obj = new br.com.walfarma.dominio.Produto();
        obj.setId(new Integer(index).longValue());
        obj.setFornecedor(fornecedorDataOnDemand.getSpecificFornecedor(index));
        obj.setCategoria(categoriaDataOnDemand.getSpecificCategoria(index));
        obj.setTributacao(null);
        java.lang.String descricao = "descricao_" + index;
        if (descricao.length() > 256) {
            descricao  = descricao.substring(0, 256);
        }
        obj.setDescricao(descricao);
        java.lang.String nome = "nome_" + index;
        if (nome.length() > 256) {
            nome  = nome.substring(0, 256);
        }
        obj.setNome(nome);
        java.lang.String codBarras = "codBarras_" + index;
        if (codBarras.length() > 12) {
            codBarras  = codBarras.substring(0, 12);
        }
        obj.setCodBarras(codBarras);
        obj.setPrecoCompra(java.math.BigDecimal.valueOf(index));
        obj.setPrecoVenda(java.math.BigDecimal.valueOf(index));
        obj.setPrecoPromocao(java.math.BigDecimal.valueOf(index));
        obj.setSaldo(java.math.BigDecimal.valueOf(index));
        obj.setItemReajustado(java.math.BigDecimal.valueOf(index));
        obj.setTipoPreco(br.com.walfarma.dominio.TipoPreco.class.getEnumConstants()[0]);
        obj.setMargemLucro(java.math.BigDecimal.valueOf(index));
        obj.setPsicotropico(Boolean.TRUE);
        obj.setDescontoMaximo(java.math.BigDecimal.valueOf(index));
        obj.setUsoContinuo(Boolean.TRUE);
        obj.setBonus(new Integer(index));
        java.lang.String oldItem = "oldIte_" + index;
        if (oldItem.length() > 8) {
            oldItem  = oldItem.substring(0, 8);
        }
        obj.setOldItem(oldItem);
        obj.setVigencia(new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime());
        obj.setAtivo(Boolean.TRUE);
        obj.setHospitalar(new Integer(index));
        obj.setValorUltimaCompra(java.math.BigDecimal.valueOf(index));
        obj.setAtualizarPreco(Boolean.TRUE);
        obj.setPromocaoEspecial(Boolean.TRUE);
        obj.setUnidadeMedida(br.com.walfarma.dominio.TipoUnidadeMedida.class.getEnumConstants()[0]);
        obj.setLastupdate(new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime());
        obj.setEstoqueAnterior(java.math.BigDecimal.valueOf(index));
        obj.setInventario(java.math.BigDecimal.valueOf(index));
        obj.setValorInventario(java.math.BigDecimal.valueOf(index));
        obj.setCMV(java.math.BigDecimal.valueOf(index));
        obj.setInicioPromocao(new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime());
        obj.setTerminoPromocao(new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime());
        obj.setPromocaoAVista(Boolean.TRUE);
        obj.setPromocaoConvenio(Boolean.TRUE);
        obj.setPromocaoPermanente(java.math.BigDecimal.valueOf(index));
        java.lang.String NCM = "NCM_" + index;
        if (NCM.length() > 10) {
            NCM  = NCM.substring(0, 10);
        }
        obj.setNCM(NCM);
        java.lang.String localizacao = "localizacao_" + index;
        if (localizacao.length() > 20) {
            localizacao  = localizacao.substring(0, 20);
        }
        obj.setLocalizacao(localizacao);
        return obj;
    }
    
    public Produto ProdutoDataOnDemand.getSpecificProduto(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Produto obj = data.get(index);
        return Produto.findProduto(obj.get_id());
    }
    
    public Produto ProdutoDataOnDemand.getRandomProduto() {
        init();
        Produto obj = data.get(rnd.nextInt(data.size()));
        return Produto.findProduto(obj.get_id());
    }
    
    public boolean ProdutoDataOnDemand.modifyProduto(Produto obj) {
        return false;
    }
    
    public void ProdutoDataOnDemand.init() {
        data = br.com.walfarma.dominio.Produto.findProdutoEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Produto' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<br.com.walfarma.dominio.Produto>();
        for (int i = 0; i < 10; i++) {
            br.com.walfarma.dominio.Produto obj = getNewTransientProduto(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
