// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.walfarma.dominio;

import br.com.walfarma.dominio.Substancia;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect SubstanciaDataOnDemand_Roo_DataOnDemand {
    
    declare @type: SubstanciaDataOnDemand: @Component;
    
    private Random SubstanciaDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Substancia> SubstanciaDataOnDemand.data;
    
    public Substancia SubstanciaDataOnDemand.getNewTransientSubstancia(int index) {
        br.com.walfarma.dominio.Substancia obj = new br.com.walfarma.dominio.Substancia();
        obj.setId(new Integer(index).longValue());
        java.lang.String descricao = "descricao_" + index;
        if (descricao.length() > 150) {
            descricao  = descricao.substring(0, 150);
        }
        obj.setDescricao(descricao);
        obj.setUltimaAtualizacao(new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime());
        return obj;
    }
    
    public Substancia SubstanciaDataOnDemand.getSpecificSubstancia(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Substancia obj = data.get(index);
        return Substancia.findSubstancia(obj.get_id());
    }
    
    public Substancia SubstanciaDataOnDemand.getRandomSubstancia() {
        init();
        Substancia obj = data.get(rnd.nextInt(data.size()));
        return Substancia.findSubstancia(obj.get_id());
    }
    
    public boolean SubstanciaDataOnDemand.modifySubstancia(Substancia obj) {
        return false;
    }
    
    public void SubstanciaDataOnDemand.init() {
        data = br.com.walfarma.dominio.Substancia.findSubstanciaEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Substancia' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<br.com.walfarma.dominio.Substancia>();
        for (int i = 0; i < 10; i++) {
            br.com.walfarma.dominio.Substancia obj = getNewTransientSubstancia(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
