// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.walfarma.dominio;

import br.com.walfarma.dominio.CabecalhoNota;
import br.com.walfarma.dominio.FornecedorDataOnDemand;
import java.util.List;
import java.util.Random;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect CabecalhoNotaDataOnDemand_Roo_DataOnDemand {
    
    declare @type: CabecalhoNotaDataOnDemand: @Component;
    
    private Random CabecalhoNotaDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<CabecalhoNota> CabecalhoNotaDataOnDemand.data;
    
    @Autowired
    private FornecedorDataOnDemand CabecalhoNotaDataOnDemand.fornecedorDataOnDemand;
    
    public CabecalhoNota CabecalhoNotaDataOnDemand.getNewTransientCabecalhoNota(int index) {
        br.com.walfarma.dominio.CabecalhoNota obj = new br.com.walfarma.dominio.CabecalhoNota();
        obj.setId(new Integer(index).longValue());
        obj.setFornecedor(fornecedorDataOnDemand.getRandomFornecedor());
        java.lang.String nota_fiscal = "nota_f_" + index;
        if (nota_fiscal.length() > 8) {
            nota_fiscal  = nota_fiscal.substring(0, 8);
        }
        obj.setNota_fiscal(nota_fiscal);
        java.lang.String serie = "s_" + index;
        if (serie.length() > 3) {
            serie  = serie.substring(0, 3);
        }
        obj.setSerie(serie);
        java.lang.String CFOP = "CF_" + index;
        if (CFOP.length() > 4) {
            CFOP  = CFOP.substring(0, 4);
        }
        obj.setCFOP(CFOP);
        obj.setTipoNotaFiscal(br.com.walfarma.dominio.TipoNotaFiscal.class.getEnumConstants()[0]);
        obj.setDataEmissao(new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime());
        obj.setDataRecebimento(new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime());
        obj.setValorTotal(java.math.BigDecimal.valueOf(index));
        obj.setBaseICMS(java.math.BigDecimal.valueOf(index));
        obj.setOutrosICMS(java.math.BigDecimal.valueOf(index));
        obj.setAliquotaICMS(java.math.BigDecimal.valueOf(index));
        obj.setIsentoIPI(java.math.BigDecimal.valueOf(index));
        obj.setOutrosIPI(java.math.BigDecimal.valueOf(index));
        obj.setBaseICMSST(java.math.BigDecimal.valueOf(index));
        obj.setFrete(java.math.BigDecimal.valueOf(index));
        obj.setCancelamento(br.com.walfarma.dominio.TipoCancelamento.class.getEnumConstants()[0]);
        obj.setSeguro(java.math.BigDecimal.valueOf(index));
        obj.setOutrasDespesas(java.math.BigDecimal.valueOf(index));
        obj.setICMSRetidoST(java.math.BigDecimal.valueOf(index));
        obj.setDesconto(java.math.BigDecimal.valueOf(index));
        obj.setDiferencaICMS(java.math.BigDecimal.valueOf(index));
        return obj;
    }
    
    public CabecalhoNota CabecalhoNotaDataOnDemand.getSpecificCabecalhoNota(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        CabecalhoNota obj = data.get(index);
        return CabecalhoNota.findCabecalhoNota(obj.get_id());
    }
    
    public CabecalhoNota CabecalhoNotaDataOnDemand.getRandomCabecalhoNota() {
        init();
        CabecalhoNota obj = data.get(rnd.nextInt(data.size()));
        return CabecalhoNota.findCabecalhoNota(obj.get_id());
    }
    
    public boolean CabecalhoNotaDataOnDemand.modifyCabecalhoNota(CabecalhoNota obj) {
        return false;
    }
    
    public void CabecalhoNotaDataOnDemand.init() {
        data = br.com.walfarma.dominio.CabecalhoNota.findCabecalhoNotaEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'CabecalhoNota' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<br.com.walfarma.dominio.CabecalhoNota>();
        for (int i = 0; i < 10; i++) {
            br.com.walfarma.dominio.CabecalhoNota obj = getNewTransientCabecalhoNota(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
